name: Release Please

on:
  push:
    branches:
      - main

permissions:
  issues: write
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: node
          package-name: foundryvtt-dnd5e-types
          token: ${{ secrets.GITHUB_TOKEN }}
          extra-files: |
            version.json
          changelog-notes-type: github
          changelog-types: |
            [{"type":"feat","section":"Features","hidden":false},
             {"type":"fix","section":"Bug Fixes","hidden":false},
             {"type":"docs","section":"Documentation","hidden":false},
             {"type":"chore","section":"Miscellaneous","hidden":false}]

      # The logic below handles the npm publication:
      - uses: actions/checkout@v4
        # These if statements ensure that a publication only occurs when
        # a new release is created:
        if: ${{ steps.release.outputs.release_created }}

      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
        if: ${{ steps.release.outputs.release_created }}

      - run: npm ci
        if: ${{ steps.release.outputs.release_created }}

      - run: npm run build
        if: ${{ steps.release.outputs.release_created }}

      - name: Get DnD5e version
        id: dnd5e-version
        run: echo "dnd5e_version=$(node -p "require('./version.json').dnd5eVersion")" >> $GITHUB_OUTPUT
        if: ${{ steps.release.outputs.release_created }}

      - name: Publish to npm
        run: npm publish --tag dnd5e-v${{ steps.dnd5e-version.outputs.dnd5e_version }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        if: ${{ steps.release.outputs.release_created }}

      - name: Build documentation
        run: npm run docs
        if: ${{ steps.release.outputs.release_created }}

      - name: Update release description
        if: ${{ steps.release.outputs.release_created }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          chmod +x .github/workflows/update-release-description.sh
          .github/workflows/update-release-description.sh \
            ${{ steps.release.outputs.release_id }} \
            ${{ steps.release.outputs.tag_name }} \
            ${{ github.repository }}
